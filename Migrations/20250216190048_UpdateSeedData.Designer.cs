// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicStore.Data;

#nullable disable

namespace MusicStore.Migrations
{
    [DbContext(typeof(MusicStoreDbContext))]
    [Migration("20250216190048_UpdateSeedData")]
    partial class UpdateSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "English rock band formed in Liverpool in 1960.",
                            Name = "The Beatles"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "American singer, songwriter, and dancer.",
                            Name = "Michael Jackson"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "American jazz trumpeter, bandleader, and composer.",
                            Name = "Miles Davis"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "American singer, songwriter, and actress.",
                            Name = "Beyoncé"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "American singer-songwriter known for narrative songwriting.",
                            Name = "Taylor Swift"
                        },
                        new
                        {
                            Id = 6,
                            Bio = "English rock band known for progressive rock.",
                            Name = "Pink Floyd"
                        },
                        new
                        {
                            Id = 7,
                            Bio = "Jamaican singer, songwriter, and musician.",
                            Name = "Bob Marley"
                        },
                        new
                        {
                            Id = 8,
                            Bio = "English singer, songwriter, and actor.",
                            Name = "David Bowie"
                        },
                        new
                        {
                            Id = 9,
                            Bio = "American singer, songwriter, and actress.",
                            Name = "Madonna"
                        },
                        new
                        {
                            Id = 10,
                            Bio = "English singer-songwriter.",
                            Name = "Adele"
                        });
                });

            modelBuilder.Entity("Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TotalSpent")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "johndoe@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Phone = "123-456-7890",
                            TotalSpent = 500.00m
                        },
                        new
                        {
                            Id = 2,
                            Email = "janesmith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            Phone = "234-567-8901",
                            TotalSpent = 1000.00m
                        },
                        new
                        {
                            Id = 3,
                            Email = "robertjohnson@example.com",
                            FirstName = "Robert",
                            LastName = "Johnson",
                            Phone = "345-678-9012",
                            TotalSpent = 150.00m
                        },
                        new
                        {
                            Id = 4,
                            Email = "emilydavis@example.com",
                            FirstName = "Emily",
                            LastName = "Davis",
                            Phone = "456-789-0123",
                            TotalSpent = 250.00m
                        },
                        new
                        {
                            Id = 5,
                            Email = "michaelmiller@example.com",
                            FirstName = "Michael",
                            LastName = "Miller",
                            Phone = "567-890-1234",
                            TotalSpent = 300.00m
                        },
                        new
                        {
                            Id = 6,
                            Email = "sophiawilliams@example.com",
                            FirstName = "Sophia",
                            LastName = "Williams",
                            Phone = "678-901-2345",
                            TotalSpent = 450.00m
                        },
                        new
                        {
                            Id = 7,
                            Email = "liambrown@example.com",
                            FirstName = "Liam",
                            LastName = "Brown",
                            Phone = "789-012-3456",
                            TotalSpent = 1200.00m
                        },
                        new
                        {
                            Id = 8,
                            Email = "oliviajones@example.com",
                            FirstName = "Olivia",
                            LastName = "Jones",
                            Phone = "890-123-4567",
                            TotalSpent = 700.00m
                        },
                        new
                        {
                            Id = 9,
                            Email = "ethangarcia@example.com",
                            FirstName = "Ethan",
                            LastName = "Garcia",
                            Phone = "901-234-5678",
                            TotalSpent = 600.00m
                        },
                        new
                        {
                            Id = 10,
                            Email = "avamartinez@example.com",
                            FirstName = "Ava",
                            LastName = "Martinez",
                            Phone = "012-345-6789",
                            TotalSpent = 800.00m
                        });
                });

            modelBuilder.Entity("Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2025, 2, 6, 21, 0, 48, 122, DateTimeKind.Local).AddTicks(1646),
                            Name = "Black Friday",
                            Percentage = 50.00m,
                            StartDate = new DateTime(2025, 2, 1, 21, 0, 48, 122, DateTimeKind.Local).AddTicks(1644)
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2025, 2, 21, 21, 0, 48, 122, DateTimeKind.Local).AddTicks(1649),
                            Name = "New Year Sale",
                            Percentage = 30.00m,
                            StartDate = new DateTime(2025, 2, 11, 21, 0, 48, 122, DateTimeKind.Local).AddTicks(1647)
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateTime(2025, 3, 18, 21, 0, 48, 122, DateTimeKind.Local).AddTicks(1652),
                            Name = "Summer Clearance",
                            Percentage = 25.00m,
                            StartDate = new DateTime(2025, 2, 21, 21, 0, 48, 122, DateTimeKind.Local).AddTicks(1650)
                        },
                        new
                        {
                            Id = 4,
                            EndDate = new DateTime(2025, 2, 6, 21, 0, 48, 122, DateTimeKind.Local).AddTicks(1654),
                            Name = "Winter Deals",
                            Percentage = 40.00m,
                            StartDate = new DateTime(2025, 1, 27, 21, 0, 48, 122, DateTimeKind.Local).AddTicks(1653)
                        },
                        new
                        {
                            Id = 5,
                            EndDate = new DateTime(2025, 3, 28, 21, 0, 48, 122, DateTimeKind.Local).AddTicks(1657),
                            Name = "Easter Special",
                            Percentage = 15.00m,
                            StartDate = new DateTime(2025, 2, 26, 21, 0, 48, 122, DateTimeKind.Local).AddTicks(1656)
                        });
                });

            modelBuilder.Entity("Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Rock"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pop"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Jazz"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Classical"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Hip-Hop"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Electronic"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Country"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Blues"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Reggae"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Indie"
                        });
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("VinylRecordId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("VinylRecordId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Promotions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscountPercentage = 10.00m,
                            EndDate = new DateTime(2025, 2, 26, 21, 0, 48, 122, DateTimeKind.Local).AddTicks(1620),
                            Name = "Jazz Week",
                            StartDate = new DateTime(2025, 2, 6, 21, 0, 48, 122, DateTimeKind.Local).AddTicks(1571)
                        },
                        new
                        {
                            Id = 2,
                            DiscountPercentage = 15.00m,
                            EndDate = new DateTime(2025, 2, 21, 21, 0, 48, 122, DateTimeKind.Local).AddTicks(1624),
                            Name = "Rock Fest",
                            StartDate = new DateTime(2025, 2, 11, 21, 0, 48, 122, DateTimeKind.Local).AddTicks(1623)
                        },
                        new
                        {
                            Id = 3,
                            DiscountPercentage = 20.00m,
                            EndDate = new DateTime(2025, 3, 8, 21, 0, 48, 122, DateTimeKind.Local).AddTicks(1627),
                            Name = "Pop Mania",
                            StartDate = new DateTime(2025, 2, 17, 21, 0, 48, 122, DateTimeKind.Local).AddTicks(1626)
                        });
                });

            modelBuilder.Entity("PromotionVinylRecord", b =>
                {
                    b.Property<int>("PromotionsId")
                        .HasColumnType("int");

                    b.Property<int>("VinylRecordsId")
                        .HasColumnType("int");

                    b.HasKey("PromotionsId", "VinylRecordsId");

                    b.HasIndex("VinylRecordsId");

                    b.ToTable("VinylRecordPromotions", (string)null);
                });

            modelBuilder.Entity("Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Universal Music"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sony Music"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Warner Music"
                        },
                        new
                        {
                            Id = 4,
                            Name = "EMI"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Atlantic Records"
                        });
                });

            modelBuilder.Entity("Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("VinylRecordId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("VinylRecordId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VinylRecordId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("VinylRecordId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VinylRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("PublisherId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Sales")
                        .HasColumnType("int");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("Tracks")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("GenreId");

                    b.HasIndex("PublisherId");

                    b.ToTable("VinylRecords");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            CreatedAt = new DateTime(2025, 2, 16, 19, 0, 48, 122, DateTimeKind.Utc).AddTicks(1677),
                            GenreId = 1,
                            Name = "Abbey Road",
                            PublisherId = 1,
                            ReleaseDate = new DateTime(1969, 9, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalePrice = 19.99m,
                            Sales = 500,
                            SellingPrice = 20.99m,
                            Stock = 100,
                            Tracks = 17,
                            Year = 1969
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 2,
                            CreatedAt = new DateTime(2025, 2, 16, 19, 0, 48, 122, DateTimeKind.Utc).AddTicks(1686),
                            GenreId = 2,
                            Name = "Thriller",
                            PublisherId = 2,
                            ReleaseDate = new DateTime(1982, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalePrice = 24.99m,
                            Sales = 700,
                            SellingPrice = 25.99m,
                            Stock = 150,
                            Tracks = 9,
                            Year = 1982
                        },
                        new
                        {
                            Id = 3,
                            ArtistId = 3,
                            CreatedAt = new DateTime(2025, 2, 16, 19, 0, 48, 122, DateTimeKind.Utc).AddTicks(1688),
                            GenreId = 3,
                            Name = "Kind of Blue",
                            PublisherId = 3,
                            ReleaseDate = new DateTime(1959, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalePrice = 29.99m,
                            Sales = 400,
                            SellingPrice = 30.99m,
                            Stock = 80,
                            Tracks = 5,
                            Year = 1959
                        },
                        new
                        {
                            Id = 4,
                            ArtistId = 4,
                            CreatedAt = new DateTime(2025, 2, 16, 19, 0, 48, 122, DateTimeKind.Utc).AddTicks(1690),
                            GenreId = 2,
                            Name = "Lemonade",
                            PublisherId = 1,
                            ReleaseDate = new DateTime(2016, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalePrice = 21.99m,
                            Sales = 600,
                            SellingPrice = 22.99m,
                            Stock = 200,
                            Tracks = 12,
                            Year = 2016
                        },
                        new
                        {
                            Id = 5,
                            ArtistId = 5,
                            CreatedAt = new DateTime(2025, 2, 16, 19, 0, 48, 122, DateTimeKind.Utc).AddTicks(1693),
                            GenreId = 2,
                            Name = "1989",
                            PublisherId = 2,
                            ReleaseDate = new DateTime(2014, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalePrice = 17.99m,
                            Sales = 800,
                            SellingPrice = 18.99m,
                            Stock = 250,
                            Tracks = 13,
                            Year = 2014
                        });
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.HasOne("Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OrderDetail", b =>
                {
                    b.HasOne("Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VinylRecord", "VinylRecord")
                        .WithMany()
                        .HasForeignKey("VinylRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("VinylRecord");
                });

            modelBuilder.Entity("PromotionVinylRecord", b =>
                {
                    b.HasOne("Promotion", null)
                        .WithMany()
                        .HasForeignKey("PromotionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VinylRecord", null)
                        .WithMany()
                        .HasForeignKey("VinylRecordsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Reservation", b =>
                {
                    b.HasOne("Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VinylRecord", "VinylRecord")
                        .WithMany()
                        .HasForeignKey("VinylRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("VinylRecord");
                });

            modelBuilder.Entity("Sale", b =>
                {
                    b.HasOne("Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VinylRecord", "VinylRecord")
                        .WithMany()
                        .HasForeignKey("VinylRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("VinylRecord");
                });

            modelBuilder.Entity("VinylRecord", b =>
                {
                    b.HasOne("Artist", "Artist")
                        .WithMany("VinylRecords")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Genre", "Genre")
                        .WithMany("VinylRecords")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Publisher", "Publisher")
                        .WithMany("VinylRecords")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Artist");

                    b.Navigation("Genre");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Artist", b =>
                {
                    b.Navigation("VinylRecords");
                });

            modelBuilder.Entity("Customer", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Genre", b =>
                {
                    b.Navigation("VinylRecords");
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Publisher", b =>
                {
                    b.Navigation("VinylRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
